
ServerName          "FTP Server"
ServerType          standalone
DefaultServer           on

# Port 21 is the standard FTP port.
Port                %{env:FTP_PORT} 
PassivePorts        %{env:PASSIVE_PORTS_FROM} %{env:PASSIVE_PORTS_TO}

# Umask 022 is a good standard umask to prevent new dirs and files
# from being group and world writable.
Umask               022
MaxInstances            30

# Set the user and group under which the server will run.
User                root
Group               root
RootLogin on # since we're in docker no worries

# To cause every FTP user to be "jailed" (chrooted) into their home
# directory, uncomment this line.
DefaultRoot ~

# Normally, we want files to be overwriteable.
<Directory />
  AllowOverwrite        on
</Directory>

# auth configuratoin, first disable PAM
UseFtpUsers off
<IfModule mod_auth_pam.c>
    AuthPAM off
</IfModule>

RequireValidShell       no
WtmpLog off

# make listed files appear to be owned by the logged-in user
DirFakeUser on ~
DirFakeGroup on ~

AuthUserFile %{env:FTP_USERS_FILE}

#LoadModule mod_tls.c

Define FTPS_REQUIRED

# TLS config
TLSEngine                  on
TLSLog                     /dev/stdout
TLSProtocol ALL -SSLv3     # http://www.proftpd.org/docs/contrib/mod_tls.html#TLSProtocol

TLSRSACertificateFile      %{env:SSL_CERT_PATH}/cert.pem
TLSRSACertificateKeyFile   %{env:SSL_CERT_PATH}/privkey.pem
TLSVerifyClient            off

TLSRenegotiate required off # http://www.proftpd.org/docs/contrib/mod_tls.html#TLSRenegotiate

<IfDefine FTPS_REQUIRED=TRUE>
    TLSRequired                on
</IfDefine>

CreateHome on

Include %{env:LIMITS_CONF_FILE}